//
// ItunesAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import PromiseKit



open class ItunesAPI {
    /**
     - parameter _id: (query) AppごとのストアID      - parameter country: (query) ストア指定 (optional)
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func lookupGet(_id: String, country: String? = nil, completion: @escaping ((_ data: GetStoreAppInfoResponseDTO?,_ error: Error?) -> Void)) {
        lookupGetWithRequestBuilder(_id: _id, country: country).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - parameter _id: (query) AppごとのストアID      - parameter country: (query) ストア指定 (optional)
     - returns: Promise<GetStoreAppInfoResponseDTO>
     */
    open class func lookupGet( _id: String,  country: String? = nil) -> Promise<GetStoreAppInfoResponseDTO> {
        //let deferred = Promise<GetStoreAppInfoResponseDTO>.pending()
        let (promise, resolver) = Promise<GetStoreAppInfoResponseDTO>.pending()
        lookupGet(_id: _id, country: country) { data, error in
            if let error = error {
                //deferred.reject(error)
                resolver.reject(error)
            } else {
                //deferred.fulfill(data!)
                resolver.fulfill(data!)
            }
        }
        //return deferred.promise
        return promise
    }

    /**
     - GET /lookup
     - iTunesStoreSearchで公開中アプリの情報を取得する 
     - examples: [{contentType=application/json, example={
  "resultCount" : 0,
  "results" : [ {
    "releaseDate" : "releaseDate",
    "trackId" : 6,
    "currentVersionReleaseDate" : "currentVersionReleaseDate",
    "trackName" : "trackName",
    "version" : "version"
  }, {
    "releaseDate" : "releaseDate",
    "trackId" : 6,
    "currentVersionReleaseDate" : "currentVersionReleaseDate",
    "trackName" : "trackName",
    "version" : "version"
  } ]
}}]
     - parameter _id: (query) AppごとのストアID      - parameter country: (query) ストア指定 (optional)

     - returns: RequestBuilder<GetStoreAppInfoResponseDTO> 
     */
    open class func lookupGetWithRequestBuilder(_id: String, country: String? = nil) -> RequestBuilder<GetStoreAppInfoResponseDTO> {
        let path = "/lookup"
        let URLString = TudVerCheckAPI.basePath + path
        let parameters: [String:Any]? = nil
        var url = URLComponents(string: URLString)
        url?.queryItems = APIHelper.mapValuesToQueryItems([
                        "id": _id, 
                        "country": country
        ])

        let requestBuilder: RequestBuilder<GetStoreAppInfoResponseDTO>.Type = TudVerCheckAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
