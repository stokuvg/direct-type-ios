//
// TudUpdateInfoAPI.swift
//
// Generated by swagger-codegen
// https://github.com/swagger-api/swagger-codegen
//

import Foundation
import Alamofire
import PromiseKit



open class TudUpdateInfoAPI {
    /**
     - parameter jsonName: (path)  
     - parameter completion: completion handler to receive the data and the error objects
     */
    open class func appInfoDirecttypeNetJsonNameGet(jsonName: String, completion: @escaping ((_ data: GetUpdateInfoResponseDTO?,_ error: Error?) -> Void)) {
        appInfoDirecttypeNetJsonNameGetWithRequestBuilder(jsonName: jsonName).execute { (response, error) -> Void in
            completion(response?.body, error)
        }
    }

    /**
     - parameter jsonName: (path)  
     - returns: Promise<GetUpdateInfoResponseDTO>
     */
    open class func appInfoDirecttypeNetJsonNameGet( jsonName: String) -> Promise<GetUpdateInfoResponseDTO> {
        //let deferred = Promise<GetUpdateInfoResponseDTO>.pending()
        let (promise, resolver) = Promise<GetUpdateInfoResponseDTO>.pending()
        appInfoDirecttypeNetJsonNameGet(jsonName: jsonName) { data, error in
            if let error = error {
                //deferred.reject(error)
                resolver.reject(error)
            } else {
                //deferred.fulfill(data!)
                resolver.fulfill(data!)
            }
        }
        //return deferred.promise
        return promise
    }

    /**
     - GET /app-info.directtype.net/{jsonName}
     - TudVersionCheck用のJSONを取得する 
     - examples: [{contentType=application/json, example={
  "required_version" : "required_version",
  "dialog_message" : "dialog_message",
  "dialog_title" : "dialog_title",
  "update_url" : "update_url",
  "force_update" : true
}}]
     - parameter jsonName: (path)  

     - returns: RequestBuilder<GetUpdateInfoResponseDTO> 
     */
    open class func appInfoDirecttypeNetJsonNameGetWithRequestBuilder(jsonName: String) -> RequestBuilder<GetUpdateInfoResponseDTO> {
        var path = "/app-info.directtype.net/{jsonName}"
        let jsonNamePreEscape = "\(jsonName)"
        let jsonNamePostEscape = jsonNamePreEscape.addingPercentEncoding(withAllowedCharacters: .urlPathAllowed) ?? ""
        path = path.replacingOccurrences(of: "{jsonName}", with: jsonNamePostEscape, options: .literal, range: nil)
        let URLString = TudVerCheckAPI.basePath + path
        let parameters: [String:Any]? = nil

        let url = URLComponents(string: URLString)

        let requestBuilder: RequestBuilder<GetUpdateInfoResponseDTO>.Type = TudVerCheckAPI.requestBuilderFactory.getBuilder()

        return requestBuilder.init(method: "GET", URLString: (url?.string ?? URLString), parameters: parameters, isBody: false)
    }

}
